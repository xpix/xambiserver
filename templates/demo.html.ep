<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
   <head>
      <title></title>
      <!-- Ignite UI Required Combined CSS Files -->
      <link href="http://cdn-na.infragistics.com/igniteui/2014.2/latest/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" />
      <link href="http://cdn-na.infragistics.com/igniteui/2014.2/latest/css/structure/infragistics.css" rel="stylesheet" />

      <!--CSS file specific for chart styling -->
      <link href="http://cdn-na.infragistics.com/igniteui/2014.2/latest/css/structure/modules/infragistics.ui.chart.css" rel="stylesheet" />

      <!-- Xambi css -->
      <link href="/css/xambi.css" rel="stylesheet" />

      <!-- Modernizr/jQuery/jQuery UI -->
      <script src="http://modernizr.com/downloads/modernizr-latest.js"></script>
      <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
      <script src="http://code.jquery.com/ui/1.11.2/jquery-ui.js"></script>


      <!-- Ignite UI Required Combined JavaScript Files -->
      <script src="http://cdn-na.infragistics.com/igniteui/2014.2/latest/js/infragistics.core.js"></script>
      <script src="http://cdn-na.infragistics.com/igniteui/2014.2/latest/js/infragistics.lob.js"></script>
      <script src="http://cdn-na.infragistics.com/igniteui/2014.2/latest/js/infragistics.dv.js"></script>

      <!-- Google UI Required Combined JavaScript Files -->
      <script type="text/javascript" src="https://www.google.com/jsapi?autoload={'modules':[{'name':'visualization','version':'1','packages':['gauge']}]}"></script>

      <!-- Jquery DFateTimePicker -->
      <link rel="stylesheet" type="text/css" href="/css/jquery.datetimepicker.css"/ >
      <script src="/js/jquery.datetimepicker.js"></script>

   </head>
   <body>

      <div id="tabs">
         <ul></ul>
         <button id="addgrp" style="position:absolute;right:4px;top:5px">Add Group</button>
      </div>

      <div id="dialog" title="Tab data">
         <form>
            <fieldset class="ui-helper-reset">
               <label for="grpname">Groupname</label>
               <input type="text" name="grpname" id="grpname_id" value="" class="ui-widget-content ui-corner-all">
               <label for="grps_select">Content</label>
               <select name="grps_select" id="grps_select_id" size="5" multiple style="width:260px"></select>
            </fieldset>
         </form>
      </div>

    <!-- Custom Tooltip Template -->
    <script id="tooltipTemplatePower" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span>Power: </span><span style="font-weight: bold">${item.Power}</span><br/>
        </div>
    </script>
    <script id="tooltipTemplateValue0" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span style="font-weight: bold">${item.Value0}</span><br/>
        </div>
    </script>
    <script id="tooltipTemplateValue1" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span style="font-weight: bold">${item.Value1}</span><br/>
        </div>
    </script>
    <script id="tooltipTemplateValue2" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span style="font-weight: bold">${item.Value2}</span><br/>
        </div>
    </script>
    <script id="tooltipTemplateValue3" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span style="font-weight: bold">${item.Value3}</span><br/>
        </div>
    </script>
    <script id="tooltipTemplateValue4" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span style="font-weight: bold">${item.Value4}</span><br/>
        </div>
    </script>
    <script id="tooltipTemplateValue5" type="text/x-jquery-tmpl">
        <div style="color: #44ACD6">
            <span>${item.Date}&nbsp;${item.Time}</span><br />
            <span style="font-weight: bold">${item.Value5}</span><br/>
        </div>
    </script>

      <script type="text/javascript">
         var config = <%== $config %>;

         var $body = $("body");

         $(document).on({
            ajaxStart: function() { $body.addClass("loading");    },
            ajaxStop: function() { $body.removeClass("loading"); }
         });


         $(function () {
            /* --------------- VARS ----------------*/
            var tabCounter = 2;

            /* --------------- INIT ----------------*/
            var tabs          = $( "#tabs" ).tabs();

            // get all exists groups via Ajax
            $.getJSON( '<%= url_for 'geras' %>?sub=groups', function( data ) {
               var d = data.groups;
               for (var group in data.groups) {
                  var series = data.groups[group];
                  addTab( group, series);
                  tabCounter++;
               }
            });

            /* --------------- FUNCTIONS ----------------*/
            function addTab(group, series) {
               var groupname = group.split("/");
               var dashboardId = 'dashboard-' + tabCounter;
               var label = groupname.last().ucfirst();
               var id = "tabs-" + tabCounter;
               var li = "<li><a href='#" + dashboardId + "'>" + label + "</a><span class='ui-icon ui-icon-close' style='position:absolute;top:2px;right:2px'>Remove Tab</span></li>";

               tabs.find( ".ui-tabs-nav" ).append( li );
               tabs.append( "<div class='dashboard' id='" + dashboardId + "'></div>" );
               tabs.tabs( "refresh" );


               var ds = new $.ig.DataSource({
                  type: "json",
                  dataSource: '/geras?sub=groups&type=sensorgrp&subparams=' + group
               }).dataBind();

               $('#' + dashboardId).igTileManager({
                  columnWidth: '180px',
                  columnHeight: '150px',
                  marginLeft: 10,
                  marginTop: 10,
                  rightPanelTilesWidth: 200,
                  rightPanelTilesHeight: 150,
                  maximizedState: $('#maximizedState').val(),
                  minimizedState: $('#minimizedState').val(),
                  dataSource: ds,
                  rendered: function (event, ui) {
                     $('#' + dashboardId).find('ul').igTree();
                  },
               });
            }

            // -------- Add new Group ----------
            // Add new Group: Button -----------
            $( "#addgrp" ).button({
               icons: {
                  primary: "ui-icon-plusthick"
               },
               text: false
            }).click(function(){
               // get options ... 
               $.getJSON( '<%= url_for 'geras' %>?sub=series_unique&subparams=1,full&type=seriestypes', function( data ) {
                  $("#grps_select_id").html("");
                  var options = [];
                  for (var sensor in data) {
                     options.push("<option value='" + sensor + "'>Node: " + sensor + ' / ' + data[sensor].ucfirst() + "</option>");
                  }
                  $("#grps_select_id").html(options.join(""));
               });

               dialog.dialog( "open" );
            });

            // Add new Group: Dialog -----------
            var dialog = $( "#dialog" ).dialog({
               autoOpen: false,
               modal: true,
               buttons: {
                  Add: function() {
                     // call addgroup with selected nodes
                     if(confirm('This will add Sensors: ' + $("#grps_select_id").val() + ' to new Group: ' + $('#grpname_id').val())){
                        $.getJSON( '<%= url_for 'geras' %>?sub=series_move_to_group&subparams=' + $('#grps_select_id').val() + ',' + $("#grpname_id").val(), function( data ) {
console.log(data);
                        });
                     }
                     $( this ).dialog( "close" );
                  },
                  Cancel: function() {
                     $( this ).dialog( "close" );
                  }
               },
               close: function() {
                  form[ 0 ].reset();
               }
            });

            // Add new Group: Send and add tab --
            // addTab form: calls addTab function on submit and closes the dialog
            var form = dialog.find( "form" ).submit(function( event ) {
               //addTab();
               dialog.dialog( "close" );
               event.preventDefault();
            });
            // ^-^-^-^-^- Add new Group ^-^-^-^-^-


            /* --------------- PROTOTYPES ----------------*/
            String.prototype.ucfirst = function()
            {
               return this.charAt(0).toUpperCase() + this.substr(1);
            }

            Array.prototype.last = function() {
               return this[this.length - 1];
            }

         });
      </script>


      <textarea id="maximizedState" style="display:none">
         <div style="width: 95%; min-width: 210px;">
            <div id="chart-${sensor}"></div>
         </div>
         <img src="images/${info.config.Image}" style="position:absolute;top:10px;left:5px;">
         <div id="legends-${sensor}" style="position:absolute;top:10px;right:10px">
            <div id="legend-${sensor}"></div>
            <div id="legend2-${sensor}"></div>
         </div>

         <div class="optionContainer">
            Interval
            <br />
            <select id="select-interval" class="selectBounds">
               <option value="1m">Minute</option>
               <option value="1h" selected="selected">Houre</option>
               <option value="1d">Day</option>
               <option value="1w">Week</option>
            </select>
         </div>

         <div class="optionContainer">
            Rollup
            <br />
            <select id="select-rollup" class="selectBounds">
               <option value="avg" selected="selected">Average</option>
               <option value="sum">Sum</option>
               <option value="max">Max</option>
               <option value="min">Min</option>
            </select>
         </div>

         <div class="optionContainer">
            Start Time
            <br />
            <input id="starttime" class="datetimepicker" type="text" >
         </div>

         <div class="optionContainer">
            End Time
            <br />
            <input id="endtime" class="datetimepicker" type="text" >
         </div>


         <script type="text/javascript">

            $(function () {
               $('.datetimepicker').datetimepicker({
                  closeOnDateSelect: false,
                  onChangeDateTime : function(dp,input){
                     $('.selectBounds').trigger( 'change' );
                  },
               });

                      var dsChart = {};

               var startolddate  = new Date();
               var endolddate    = new Date();


               var rollup = 'avg';
               var interval = '1d';

               dsChart['${sensor}'] = new $.ig.DataSource({
                  type: "json",
                  dataSource: '/geras?sub=rollup&type=timedata&subparams=/sensors/${sensor}/%2B,' + rollup + ',' + interval,
               });

               $('.selectBounds').on({
                  change: function (e) {
                     var interval = $('#select-interval').val();
                     var rollup   = $('#select-rollup').val();

                     var startdate= new Date($('#starttime').val());
                     var enddate  = new Date($('#endtime').val());

                     var start = ( $('#starttime').val() ? startdate.getTime() : '');
                     var end = ( $('#endtime').val() ? enddate.getTime() : '');

                     if(startolddate.getTime() == startdate.getTime() && endolddate.getTime() == enddate.getTime()){
                        return;
                     }
                     

                     var dgurl = '/geras?sub=rollup&type=timedata&subparams=/sensors/${sensor}/%2B,' + rollup + ',' + interval;
                     if(start)
                           dgurl += ',' + (start/1000);
                     if(end)
                           dgurl += ( start=='' ? ',,' : ',') + (end/1000);
                     dsChart['${sensor}'] = new $.ig.DataSource({type: 'json', dataSource: dgurl});
                     $("#chart-${sensor}").igDataChart( "option", "dataSource", dsChart['${sensor}']);
                     
                     startolddate = startdate;
                     endolddate  = enddate;
                  }
               });

               var possibleValues = "${info.config.ValNames}".split(',');
               var axes = [{
                  type: "categoryX",
                  name: "xAxis",
                  label: "Stamp",
                  stroke: "lightgray",
                  strokeThickness: 3,
                  title: "Time",
                  formatLabel: function (item) {  
                        var datum = new Date(parseInt(item.Stamp) * 1000);
                        var ret = datum.toDateString().replace(/\S+\s+(\S+)\s+(\d+).+/, "$2$1");  
                        ret += "\n";
                        ret += datum.toTimeString().replace(/.*(\d{2}:\d{2}):\d{2}.*/, "$1");
  
                        return ret;  
                  },  
               }];
               var series = [];
               var axesPos = ['outsideRight', 'outsideLeft', 'outsideLeft', 'outsideLeft'];
               for(var i=0;i<possibleValues.length;i++){
                  axes.push({
                     type: "numericY",
                     name: 'axis-' + possibleValues[i],
                     minimumValue: parseFloat(config.display[possibleValues[i]].minimumValue),
                     maximumValue: parseFloat(config.display[possibleValues[i]].maximumValue),
                     labelLocation: axesPos[i],
                     strokeThickness: 1,
                     stroke: "lightgray",
                     title: config.display[possibleValues[i]].text
                  });
                  var pfad = 'Power';
                  if(possibleValues[i] != 'Power'){
                     pfad = 'Value' + (i - 1);
                  }
                  series.push({
                     type: "line",
                     name: possibleValues[i],
                     title: possibleValues[i] + " in " + config.display[possibleValues[i]].suffix,
                     xAxis: "xAxis",
                     yAxis: 'axis-' + possibleValues[i],
                     valueMemberPath: pfad,
                     isHighlightingEnabled: true,
                     isTransitionInEnabled: true,
                     showTooltip: true,
                     tooltipTemplate: 'tooltipTemplate' + pfad,
                     legend: { element: "legend-${sensor}" }
                  });
               }

               $("#chart-${sensor}").igDataChart({
                  dataSource: dsChart['${sensor}'],
                  brushes: [ "gray", "blue", "green", "red", "brown" ],
                  width: "100%",
                  height: "450px",
                  title: "${name}",
                  subtitle: "${text}",
                  horizontalZoomable: true,
                  verticalZoomable: true,
                  axes: axes,
                  displayType: "continuous",
                  series: series,
                  leftMargin: 5,
                  topMargin: 15
               });
            });
         </script>
      </textarea>


      <textarea id="minimizedState" style="display:none">
         <div style="width:99%; height:120" ><!-- Start Big Div -->
            <img src="images/${info.config.Image}" style="position:absolute;top:5px;left:5px;">
            <div id="radialGauge-${sensor}" style="float:left"></div>
            <script type="text/javascript">
               $(function () {
                  var display = config.display['${type}'];
                  var vals = [${value.0.last}, ${value.1.last}, ${value.2.last}, ${value.3.last}, ${value.4.last}, ${value.5.last}, ${value.6.last}, ${value.7.last}, ${value.8.last}, ${value.9.last}];
                  var vidx = (typeof display.valueidx == 'undefined' ? 0 : parseInt(display.valueidx)+1 );
                  var calc = parseInt(vals[vidx] / display.divider);
                  var data = google.visualization.arrayToDataTable([
                  ['Label', 'Value'],
                  ['${type}', calc ],
                  ]);

                  var options = {
                     width: 120, height: 120,
                     redFrom: display.redFrom, redTo: display.redTo,
                     yellowFrom:display.yellowFrom, yellowTo: display.yellowTo,
                     greenFrom:display.greenFrom, greenTo: display.greenTo,
                     min:display.minimumValue, max:display.maximumValue,
                     minorTicks: 5
                  };

                  var chart = new google.visualization.Gauge(document.getElementById('radialGauge-${sensor}'));
                  chart.draw(data, options);
               });
            </script>

            <div id="bulletgraph-${sensor}"></div>
         </div><!-- End Big Div -->

         <script type="text/javascript">
            $(function () {
               var $bulletGraph = $("#bulletgraph-${sensor}");
               $bulletGraph.igBulletGraph({
                  height: "110px",
                  width:  "20px",
                  orientation: "vertical",
                  value: ((${power}-2000)/(3300 - 2000)) * 100,
                  labelsPreTerminal: 101,
                  maximumValue: 100,
                  labelInterval: 50,
                  minorTickCount: 0,
                  ranges: [
                  {
                     name: 'bad',
                     startValue: 0,
                     endValue: 30
                  },
                  {
                     name: 'acceptable',
                     startValue: 30,
                     endValue: 60
                  },
                  {
                     name: 'good',
                     startValue: 60,
                     endValue: 100
                  }
                  ]
               });
            });
         </script>
      </textarea>

      <div class="modal"></div>
   </body>
</html>